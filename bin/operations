#!/bin/sh



function authenticate(){
    client_message "Your token is: $OPENSTACK_TOKEN"
    curl -s -X POST "$OPENSTACK_AUTH_URL"/tokens \
                    -H "Content-Type: application/json" \
                    -d @"$OPENSHIFT_DIY_DIR"cluster/json/authenticate.json \
                    > "$OPENSHIFT_DIY_DIR"temp/response_authenticate.json

    # parse response and save token to appropriate variable
    TOKEN=`cat ${OPENSHIFT_DIY_DIR}temp/response_authenticate.json | ${OPENSHIFT_DIY_DIR}bin/jq -r '.access.token.id'`
    client_message "Your token is: $TOKEN"
    echo $TOKEN > ${OPENSHIFT_DIY_DIR}env/OPENSTACK_TOKEN
    echo "Token is saved in OPENSTACK_TOKEN env variable: $OPENSTACK_TOKEN" >> $OPENSHIFT_SPARK_LOG
}

function createMasterNodeGroup(){

    curl -s -X POST "$SAHARA_URL/$TENANT_ID/node-group-templates" \
                    -H "Content-Type: application/json" \
                    -H "X-Auth-Token: $TOKEN" \
                    -d @"$OPENSHIFT_DIY_DIR"/cluster/json/ng-master.json \
                    > "$OPENSHIFT_DIY_DIR"/temp/response_ng-master.json

    SPARK_TEMPLATE_MASTER_ID=`cat ${OPENSHIFT_DIY_DIR}temp/response_ng-master.json | ${OPENSHIFT_DIY_DIR}bin/jq -r '.node_group_template.id'`

    echo "Master node template id: $SPARK_TEMPLATE_MASTER_ID" >> $OPENSHIFT_SPARK_LOG
}

function createSlaveNodeGroup(){
    curl -s -X POST "$SAHARA_URL/$TENANT_ID/node-group-templates" \
                    -H "Content-Type: application/json" \
                    -H "X-Auth-Token: $TOKEN" \
                    -d @"$OPENSHIFT_DIY_DIR"/cluster/json/ng-slave.json \
                    > "$OPENSHIFT_DIY_DIR"/temp/response_ng-slave.json

    SPARK_TEMPLATE_SLAVE_ID=`cat ${OPENSHIFT_DIY_DIR}temp/response_ng-slave.json | ${OPENSHIFT_DIY_DIR}bin/jq -r '.node_group_template.id'`

    echo "Slave node template id: $SPARK_TEMPLATE_SLAVE_ID" >> $OPENSHIFT_SPARK_LOG
}

function createClusterTemplate(){
    sed -e "s/NTEMPLATE_MASTER_ID/$SPARK_TEMPLATE_MASTER_ID/g" \
            -e "s/NTEMPLATE_SLAVE_ID/$SPARK_TEMPLATE_SLAVE_ID/g" \
            "$OPENSHIFT_DIY_DIR"/cluster/json/cluster_basic.json > "$OPENSHIFT_DIY_DIR"/temp/cluster_basic_resolved.json

    curl -s -X POST "$SAHARA_URL/$TENANT_ID/cluster-templates" \
                    -H "Content-Type: application/json" \
                    -H "X-Auth-Token: $TOKEN" \
                    -d @"$OPENSHIFT_DIY_DIR"/temp/cluster_basic_resolved.json \
                    > "$OPENSHIFT_DIY_DIR"/temp/response_cluster_basic.json

    SPARK_CLUSTER_TEMPLATE_ID=`cat ${OPENSHIFT_DIY_DIR}temp/response_cluster_basic.json | ${OPENSHIFT_DIY_DIR}bin/jq -r '.cluster_template.id'`

    echo "Cluster template id: $SPARK_CLUSTER_TEMPLATE_ID" >> $OPENSHIFT_SPARK_LOG
}

function createCluster(){
    sed -e "s/CLUSTER_TEMPLATE_ID/$SPARK_CLUSTER_TEMPLATE_ID/g" \
            "$OPENSHIFT_DIY_DIR"/cluster/json/launch_cluster.json >> "$OPENSHIFT_DIY_DIR"/temp/launch_cluster_resolved.json

    curl -s -X POST "$SAHARA_URL/$TENANT_ID/clusters" \
                    -H "Content-Type: application/json" \
                    -H "X-Auth-Token: $TOKEN" \
                    -d @"$OPENSHIFT_DIY_DIR"/temp/launch_cluster_resolved.json \
                    > "$OPENSHIFT_DIY_DIR"/temp/response_launch_cluster.json

    SPARK_CLUSTER_ID=`cat ${OPENSHIFT_DIY_DIR}temp/response_launch_cluster.json | ${OPENSHIFT_DIY_DIR}bin/jq -r '.cluster.id'`
    SPARK_MANAGEMENT_KEY=`cat ${OPENSHIFT_DIY_DIR}temp/response_launch_cluster.json | ${OPENSHIFT_DIY_DIR}bin/jq -r '.cluster.management_public_key'`

    echo "Cluster id: $SPARK_CLUSTER_ID" >> $OPENSHIFT_SPARK_LOG
}