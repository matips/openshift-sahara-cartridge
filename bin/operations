#!/bin/sh
source ../cluster/config.properties

function authenticate(){
    client_message "Your token is: $OPENSTACK_TOKEN"
    curl -s -X POST "$OPENSTACK_AUTH_URL"/tokens \
                    -H "Content-Type: application/json" \
                    -d @"${OPENSHIFT_SP_DIR}"cluster/json/authenticate.json \
                    > "${OPENSHIFT_SP_DIR}"temp/response_authenticate.json

    # parse response and save token to appropriate variable
    TOKEN=`cat ${OPENSHIFT_SP_DIR}temp/response_authenticate.json | ${OPENSHIFT_SP_DIR}bin/jq -r '.access.token.id'`
    client_message "Your token is: $TOKEN"
    echo $TOKEN > ${OPENSHIFT_SP_DIR}env/OPENSTACK_TOKEN
    echo "Token is saved in OPENSTACK_TOKEN env variable: $OPENSTACK_TOKEN" >> ${OPENSHIFT_SP_LOG}
}

function createMasterNodeGroup(){

    curl -s -X POST "$SAHARA_URL/node-group-templates" \
                    -H "Content-Type: application/json" \
                    -H "X-Auth-Token: $TOKEN" \
                    -d @"${OPENSHIFT_SP_DIR}"/cluster/json/ng-master.json \
                    > "${OPENSHIFT_SP_DIR}"/temp/response_ng-master.json

    SPARK_TEMPLATE_MASTER_ID=`cat ${OPENSHIFT_SP_DIR}temp/response_ng-master.json | ${OPENSHIFT_SP_DIR}bin/jq -r '.node_group_template.id'`

    echo "Master node template id: $SPARK_TEMPLATE_MASTER_ID" >> ${OPENSHIFT_SP_LOG}
}

function createSlaveNodeGroup(){
    curl -s -X POST "$SAHARA_URL/node-group-templates" \
                    -H "Content-Type: application/json" \
                    -H "X-Auth-Token: ${OPENSTACK_TOKEN}" \
                    -d @"${OPENSHIFT_SP_DIR}"/cluster/json/ng-slave.json \
                    > "${OPENSHIFT_SP_DIR}"/temp/response_ng-slave.json

    SPARK_TEMPLATE_SLAVE_ID=`cat ${OPENSHIFT_SP_DIR}temp/response_ng-slave.json | ${OPENSHIFT_SP_DIR}bin/jq -r '.node_group_template.id'`

    echo "Slave node template id: $SPARK_TEMPLATE_SLAVE_ID" >> ${OPENSHIFT_SP_LOG}
}

function createClusterTemplate(){
    authenticate

    cat  "${OPENSHIFT_SP_DIR}"/cluster/json/cluster_basic.json | \
               ${OPENSHIFT_SP_DIR}bin/jq ".node_groups[0].node_group_template_id = \"${SPARK_TEMPLATE_MASTER_ID}\"" | \
               ${OPENSHIFT_SP_DIR}bin/jq ".node_groups[1].node_group_template_id = \"${SPARK_TEMPLATE_SLAVE_ID}\"" | \
               ${OPENSHIFT_SP_DIR}bin/jq ".node_groups[1].count = \"${WORKERS_COUNT}\"" \
               > ${OPENSHIFT_SP_DIR}/temp/cluster_basic_resolved.json

    curl -s -X POST "$SAHARA_URL/cluster-templates" \
                    -H "Content-Type: application/json" \
                    -H "X-Auth-Token: ${OPENSTACK_TOKEN}" \
                    -d @"${OPENSHIFT_SP_DIR}"/temp/cluster_basic_resolved.json \
                    > "${OPENSHIFT_SP_DIR}"/temp/response_cluster_basic.json

    SPARK_CLUSTER_TEMPLATE_ID=`cat ${OPENSHIFT_SP_DIR}temp/response_cluster_basic.json | ${OPENSHIFT_SP_DIR}bin/jq -r '.cluster_template.id'`

    echo "Cluster template id: $SPARK_CLUSTER_TEMPLATE_ID" >> ${OPENSHIFT_SP_LOG}
}

function createCluster(){
    authenticate
    cat ${OPENSHIFT_SP_DIR}cluster/json/launch_cluster.json | \
                ${OPENSHIFT_SP_DIR}bin/jq ".cluster_template_id = \"${SPARK_CLUSTER_TEMPLATE_ID}\"" \
                > "${OPENSHIFT_SP_DIR}"/temp/launch_cluster_resolved.json

    curl -s -X POST "$SAHARA_URL/clusters" \
                    -H "Content-Type: application/json" \
                    -H "X-Auth-Token: ${OPENSTACK_TOKEN}" \
                    -d @"${OPENSHIFT_SP_DIR}"/temp/launch_cluster_resolved.json \
                    > "${OPENSHIFT_SP_DIR}"/temp/response_launch_cluster.json

    ERROR=`cat ${OPENSHIFT_SP_DIR}temp/response_launch_cluster.json | ${OPENSHIFT_SP_DIR}bin/jq -r '.error_name'`
    echo "Error: ${ERROR}" >> ${OPENSHIFT_SP_LOG}
    if [ ${ERROR}='NAME_ALREADY_EXISTS' ]
    then
        echo "Cluster already exists"
    else
        SPARK_CLUSTER_ID=`cat ${OPENSHIFT_SP_DIR}temp/response_launch_cluster.json | ${OPENSHIFT_SP_DIR}bin/jq -r '.cluster.id'`
        SPARK_MANAGEMENT_KEY=`cat ${OPENSHIFT_SP_DIR}temp/response_launch_cluster.json | ${OPENSHIFT_SP_DIR}bin/jq -r '.cluster.management_public_key'`
    fi

    echo $SPARK_MANAGEMENT_KEY > ${OPENSHIFT_SP_DIR}env/SPARK_MANAGEMENT_KEY
    echo $SPARK_CLUSTER_ID > ${OPENSHIFT_SP_DIR}env/SPARK_CLUSTER_ID

    echo "Cluster id: $SPARK_CLUSTER_ID" >> ${OPENSHIFT_SP_LOG}
    echo "Cluster menagment key: $SPARK_MANAGEMENT_KEY" >> ${OPENSHIFT_SP_LOG}
}