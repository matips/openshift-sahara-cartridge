#!/bin/bash -e

cd -P "$(dirname $0)"

source $OPENSHIFT_CARTRIDGE_SDK_BASH
source ../cluster/config.properties
source ../bin/operations
OPENSHIFT_SP_LOG=${OPENSHIFT_LOG_DIR}sahara.log

function run_hook() {
  local path="$OPENSHIFT_REPO_DIR/.openshift/action_hooks/$1"
  if [ -f "$path" -a -x "$path" ]
  then
    "$path"
  else
    return 0
  fi
}

function start() {
    client_message "Starting Sahara cartridge" >> ${OPENSHIFT_SP_LOG}

    createCluster "${OPENSHIFT_REPO_DIR}cluster/config.properties"
    deployJob "${OPENSHIFT_REPO_DIR}cluster/config.properties"
}

function deploy(){
    echo "Deploying with Sahara" >> ${OPENSHIFT_SP_LOG}

#    curl -H "Content-Type: application/json"  \
#            -X POST \
#            ${SAHARA_URL}'/v1.0/'${TENANT_ID}"/jobs"
#            -d @"$OPENSHIFT_REPO_DIR/cluster/job.json" \
#            -o ${runend_job}

}
function stop() {
    echo "Stopping Sahara" >> ${OPENSHIFT_SP_LOG}
}

function restart() {
    stop
    start
}

function status() {
   if output=$(curl http://$OPENSHIFT_DIY_IP:$OPENSHIFT_DIY_PORT 2>&1 )
   then
      client_result "Application is running"
   else
      client_result "Application is either stopped or inaccessible"
   fi
}

function reload() {
    client_result "Reloading Shara cart" >> ${OPENSHIFT_SP_LOG}


    restart
}

function tidy() {

  client_message "Emptying diy logs in dir: $OPENSHIFT_LOG_DIR"
  shopt -s dotglob
  client_message "Deleting cluster"
  createCluster "$OPENSHIFT_REPO_DIRcluster/config.properties"
  rm -rf $OPENSHIFT_LOG_DIR/diy.log*

}

case "$1" in
  start)     start ;;
  stop)      stop ;;
  restart)   restart ;;
  status)    status ;;
  deploy)    deploy ;;
  build)     deploy ;;
  reload)    reload ;;
  tidy)      tidy ;;
  *)         exit 0
esac
