#!/bin/bash -e

source $OPENSHIFT_CARTRIDGE_SDK_BASH

client_message "Openstack Auth url: $OPENSTACK_AUTH_URL"
client_message "Openstack url: $OPENSTACK_URL"
client_message "Logfile: $OPENSHIFT_SPARK_LOG"
client_message "Sahara url: $OPENSTACK_SAHARA_URL/$OPENSTACK_TENANT_ID"

echo -e `ls >> $OPENSHIFT_SPARK_LOG`

echo "Auth url: $OPENSTACK_AUTH_URL" >> OPENSHIFT_DIY_LOG
echo "Sahara url: $OPENSTACK_SAHARA_URL/$OPENSTACK_TENANT_ID" >> OPENSHIFT_DIY_LOG
echo "Create node group template url: $OPENSTACK_SAHARA_URL/$OPENSTACK_TENANT_ID"/node-group-templates >> OPENSHIFT_DIY_LOG

mkdir -p ${OPENSHIFT_DIY_DIR}run

# authentication

client_message "Your token is: $OPENSTACK_TOKEN"
curl -s -X POST "$OPENSTACK_AUTH_URL"/tokens \
                -H "Content-Type: application/json" \
                -d @"$OPENSHIFT_SPARK_DIR"/template/json/authenticate.json \
                > "$OPENSHIFT_SPARK_DIR"/temp/response_authenticate.json

# parse response and save token to appropriate variable
TOKEN=`cat $OPENSHIFT_SPARK_DIR/temp/response_authenticate.json | $OPENSHIFT_SPARK_DIR/bin/util/jq -r '.access.token.id'`
client_message "Your token is: $TOKEN"
echo $TOKEN > $OPENSHIFT_SPARK_DIR/env/OPENSTACK_TOKEN
echo "Token is saved in OPENSTACK_TOKEN env variable: $OPENSTACK_TOKEN" >> $OPENSHIFT_SPARK_LOG

# create master node group template

curl -s -X POST "$OPENSTACK_SAHARA_URL/$OPENSTACK_TENANT_ID/node-group-templates" \
                -H "Content-Type: application/json" \
                -H "X-Auth-Token: $TOKEN" \
                -d @"$OPENSHIFT_SPARK_DIR"/template/json/ng-master.json \
                > "$OPENSHIFT_SPARK_DIR"/temp/response_ng-master.json

OPENSHIFT_SPARK_NTEMPLATE_MASTER_ID=`cat $OPENSHIFT_SPARK_DIR/temp/response_ng-master.json | $OPENSHIFT_SPARK_DIR/bin/util/jq -r '.node_group_template.id'`

echo "Master node template id: $OPENSHIFT_SPARK_NTEMPLATE_MASTER_ID" >> $OPENSHIFT_SPARK_LOG

# create slave node group template

curl -s -X POST "$OPENSTACK_SAHARA_URL/$OPENSTACK_TENANT_ID/node-group-templates" \
                -H "Content-Type: application/json" \
                -H "X-Auth-Token: $TOKEN" \
                -d @"$OPENSHIFT_SPARK_DIR"/template/json/ng-slave.json \
                > "$OPENSHIFT_SPARK_DIR"/temp/response_ng-slave.json

OPENSHIFT_SPARK_NTEMPLATE_SLAVE_ID=`cat $OPENSHIFT_SPARK_DIR/temp/response_ng-slave.json | $OPENSHIFT_SPARK_DIR/bin/util/jq -r '.node_group_template.id'`

echo "Slave node template id: $OPENSHIFT_SPARK_NTEMPLATE_SLAVE_ID" >> $OPENSHIFT_SPARK_LOG

# create cluster template

sed -e "s/NTEMPLATE_MASTER_ID/$OPENSHIFT_SPARK_NTEMPLATE_MASTER_ID/g" \
        -e "s/NTEMPLATE_SLAVE_ID/$OPENSHIFT_SPARK_NTEMPLATE_SLAVE_ID/g" \
        "$OPENSHIFT_SPARK_DIR"/template/json/cluster_basic.json > "$OPENSHIFT_SPARK_DIR"/temp/cluster_basic_resolved.json

curl -s -X POST "$OPENSTACK_SAHARA_URL/$OPENSTACK_TENANT_ID/cluster-templates" \
                -H "Content-Type: application/json" \
                -H "X-Auth-Token: $TOKEN" \
                -d @"$OPENSHIFT_SPARK_DIR"/temp/cluster_basic_resolved.json \
                > "$OPENSHIFT_SPARK_DIR"/temp/response_cluster_basic.json

OPENSHIFT_SPARK_CLUSTER_TEMPLATE_ID=`cat $OPENSHIFT_SPARK_DIR/temp/response_cluster_basic.json | $OPENSHIFT_SPARK_DIR/bin/util/jq -r '.cluster_template.id'`

echo "Cluster template id: $OPENSHIFT_SPARK_CLUSTER_TEMPLATE_ID" >> $OPENSHIFT_SPARK_LOG

# create cluster

sed -e "s/CLUSTER_TEMPLATE_ID/$OPENSHIFT_SPARK_CLUSTER_TEMPLATE_ID/g" \
        "$OPENSHIFT_SPARK_DIR"/template/json/launch_cluster.json >> "$OPENSHIFT_SPARK_DIR"/temp/launch_cluster_resolved.json

curl -s -X POST "$OPENSTACK_SAHARA_URL/$OPENSTACK_TENANT_ID/clusters" \
                -H "Content-Type: application/json" \
                -H "X-Auth-Token: $TOKEN" \
                -d @"$OPENSHIFT_SPARK_DIR"/temp/launch_cluster_resolved.json \
                > "$OPENSHIFT_SPARK_DIR"/temp/response_launch_cluster.json

OPENSHIFT_SPARK_CLUSTER_ID=`cat $OPENSHIFT_SPARK_DIR/temp/response_launch_cluster.json | $OPENSHIFT_SPARK_DIR/bin/util/jq -r '.cluster.id'`
OPENSHIFT_SPARK_MANAGEMENT_KEY=`cat $OPENSHIFT_SPARK_DIR/temp/response_launch_cluster.json | $OPENSHIFT_SPARK_DIR/bin/util/jq -r '.cluster.management_public_key'`

echo "Cluster id: $OPENSHIFT_SPARK_CLUSTER_ID" >> $OPENSHIFT_SPARK_LOG

# cleanup
# rm -rf "$OPENSHIFT_SPARK_DIR"/temp

exit 0
